apiVersion: apps/v1
kind: Deployment
metadata:
  name: inference-worker
  labels:
    app: inference-worker
    research-project: inference-cluster
spec:
  replicas: 2  # One for primary, one for backup
  selector:
    matchLabels:
      app: inference-worker
  template:
    metadata:
      labels:
        app: inference-worker
        research-project: inference-cluster
    spec:
      containers:
      - name: inference-worker
        image: inference-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: "50m"
            memory: "32Mi"
          limits:
            cpu: "100m"
            memory: "64Mi"
        env:
        - name: INFERENCE_WORKER_TYPE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['inference-tier']
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: research-project
                operator: In
                values:
                - inference-cluster
              - key: node-type
                operator: In
                values:
                - worker
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: inference-worker
